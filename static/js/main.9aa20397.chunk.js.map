{"version":3,"sources":["components/Header.js","components/ResultComponent.js","util/pq.js","util/helper.js","components/DrpContainerSrch.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","props","classes","react_default","a","createElement","className","AppBar_default","position","Toolbar_default","Typography_default","variant","color","ResultComponent","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cost","time","transport","stops","_this$props","from","to","trips","result","timeinminutes","totalcost","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","trip","value","parseInt","duration","h","m","discount","err","return","hours","Math","floor","minutes","index_es","item","xs","typg","component","align","ExpansionPanel_default","ExpansionPanelSummary_default","exppanelcenter","expandIcon","ExpandMore_default","ExpansionPanelDetails_default","Paper_default","Table_default","table","TableBody_default","map","row","index","TableRow_default","key","TableCell_default","departure","arrival","Component","theme","objectSpread","display","flexWrap","mixins","gutters","paddingTop","spacing","unit","paddingBottom","width","marginTop","overflowX","minWidth","div","justifyContent","PriorityQueue","ejectSmallest","nodes","shift","isEmpty","length","priority","push","sort","b","shortestPathalgo","originalArray","graphVertex","forEach","element","ref","reference","weight","tabvalue","Error","dijkstraOutput","prev","refTripMap","concat","reverse","bestPath","Graph","dist","vertex","hasOwnProperty","add","Infinity","u","v","alt","runDijkstra","selectedDeparture","selectedArrival","tripsArray","referencemap","get","originalarray","DrpContainerSrch","handleChange","event","setState","defineProperty","target","name","handleSubmit","preventDefault","routeCalculation","handleReset","groupmap","Map","searchResult","handleTabChange","resultArray","filter","dummyStateObject","_this2","fetch","headers","Content-Type","Accept","then","response","json","data","deals","refernceMap","set","collection","cityArray","Array","keys","Grid_default","container","onSubmit","FormControl_default","formControl","InputLabel_default","htmlFor","Select_default","onChange","input","FilledInput_default","id","MenuItem_default","Button_default","button","onClick","square","Tabs_default","indicatorColor","textColor","centered","Tab_default","label","components_ResultComponent","React","margin","selectEmpty","App","components_Header","components_DrpContainerSrch","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9aa20397.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nfunction Header(props) {\r\n  const { classes } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          \r\n          <Typography variant=\"h4\" color=\"inherit\" className={classes.grow}>\r\n            Trip Sorter\r\n          </Typography>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Header);","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n      ...theme.mixins.gutters(),\r\n      paddingTop: theme.spacing.unit * 2,\r\n      paddingBottom: theme.spacing.unit * 2,\r\n      width: '100%',\r\n    marginTop: theme.spacing.unit * 3,\r\n    overflowX: 'auto',\r\n    },\r\n    \r\n  \r\n    typg:{\r\n        marginTop:theme.spacing.unit * 2,\r\n    },\r\n    table: {\r\n        minWidth: 700\r\n      },\r\n      exppanelcenter:{\r\n          'div':{\r\n            justifyContent:\"center\"\r\n          }\r\n          \r\n      }\r\n     \r\n  });\r\n  \r\n\r\nclass ResultComponent extends Component {\r\n  \r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      cost: '',\r\n      time: '',\r\n      transport: '',\r\n      stops: '',\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    const { classes,from,to } = this.props;\r\n    const trips = this.props.result;\r\n    let timeinminutes=0,totalcost=0;\r\n\r\n    for(let trip of trips){\r\n        timeinminutes= timeinminutes + parseInt(trip.duration.h)*60+parseInt(trip.duration.m);\r\n        totalcost=totalcost+(trip.cost * (1 - (trip.discount / 100)));\r\n    }\r\n   let hours = Math.floor(timeinminutes/60);\r\n    let minutes = timeinminutes%60;\r\n    return (\r\n        <Grid item xs={12}>\r\n        <Typography className={classes.typg} variant=\"h5\" component=\"h3\" align=\"center\">\r\n     Best route for this selection will cost {totalcost} Euros and take {hours} Hrs and {minutes} mins.\r\n      </Typography>\r\n\r\n       <ExpansionPanel>\r\n        <ExpansionPanelSummary className={classes.exppanelcenter} expandIcon={<ExpandMoreIcon />}>\r\n          <Typography className={classes.typg} variant=\"h6\" component=\"h3\" align=\"center\">{from} > {to}</Typography>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n        <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        \r\n        <TableBody>\r\n          {trips.map((row,index) => (\r\n            <TableRow key={index}>\r\n              \r\n              <TableCell align=\"right\">{row.departure}</TableCell>\r\n              <TableCell align=\"right\">{row.arrival}</TableCell>\r\n              <TableCell align=\"right\">{row.transport}</TableCell>\r\n              <TableCell align=\"right\">{row.cost} Euros</TableCell>\r\n              <TableCell align=\"right\">{row.duration.h} hours and {row.duration.m} mins</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n      \r\n      \r\n      </Grid>\r\n      \r\n    )\r\n  }\r\n}\r\nexport default withStyles(styles)(ResultComponent)","class PriorityQueue {\r\n    \r\n  \r\n    constructor() {\r\n      this.nodes = [];\r\n    }\r\n  \r\n    add(key, priority) {\r\n      this.nodes.push({key, priority});\r\n      this.sort();\r\n    }\r\n  \r\n    ejectSmallest = () => this.nodes.shift().key;\r\n  \r\n    isEmpty = () => !this.nodes.length;\r\n  \r\n    sort() {\r\n      this.nodes.sort((a, b) => a.priority - b.priority);\r\n    }\r\n  }\r\n  \r\n  export default PriorityQueue","import PriorityQueue from './pq'\r\n\r\nconst runDijkstra=(Graph, from ,to)=> {\r\n    let nodes = new PriorityQueue();\r\n    let dist = {};\r\n    let prev = {};\r\n    let refTripMap = {};\r\n\r\n    // Assign initial values:\r\n    // 0 - for departure city\r\n    // infinity - for all other nodes\r\n    for (let vertex in Graph) {\r\n      if (Graph.hasOwnProperty(vertex)) {\r\n        if (vertex === from) {\r\n          dist[vertex] = 0;\r\n          nodes.add(vertex, 0);\r\n        } else {\r\n          dist[vertex] = Infinity;\r\n          nodes.add(vertex, Infinity);\r\n        }\r\n        prev[vertex] = null;\r\n      }\r\n    }\r\n\r\n    while(!nodes.isEmpty()) {\r\n      // u - current FROM node\r\n      let u = nodes.ejectSmallest();\r\n\r\n      // exit if we reached destination\r\n      if (u === to) break;\r\n\r\n      // continue if we've got nodes to check\r\n      if (!u || dist[u] === Infinity) continue;\r\n\r\n      // v - current TO node\r\n      for (let v in Graph[u]) {\r\n        if (Graph[u].hasOwnProperty(v)) {\r\n          const alt = dist[u] + Graph[u][v].weight;\r\n          if (alt < dist[v]) {\r\n            dist[v] = alt;\r\n            prev[v] = u;\r\n            nodes.add(v, alt);\r\n            refTripMap[`${u}-${v}`] = Graph[u][v].ref;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return { prev, refTripMap }\r\n  }\r\n\r\n  const bestPath=(dijkstraOutput, to) =>{\r\n    let trips = [];\r\n    let arrival = to;\r\n    let departure = dijkstraOutput.prev[arrival];\r\n\r\n    while (departure) {\r\n      trips.push(dijkstraOutput.refTripMap[`${departure}-${arrival}`]);\r\n      arrival = departure;\r\n      departure = dijkstraOutput.prev[departure];\r\n    }\r\n\r\n    return trips.reverse();\r\n  }\r\n\r\nexport const shortestPathalgo = (originalArray,state)=>{\r\nlet graphVertex = {};\r\noriginalArray.forEach(element => {\r\n    const from = element.departure;\r\n      const to = element.arrival;\r\n      const ref = element.reference;\r\n      const cost  = element.cost * (1 - (element.discount / 100));\r\n      const time  = parseInt(element.duration.h + element.duration.m, 10);\r\n      let weight  = 0;\r\n      switch (state.tabvalue) {\r\n        case 0:\r\n          weight = cost;\r\n          break;\r\n        case 1:\r\n          weight = time;\r\n          break;\r\n        default:\r\n          throw new Error('Unsupported trip type')\r\n      }\r\n      if(!graphVertex[from]){\r\n          graphVertex[from] = [];\r\n      }\r\n      if(!graphVertex[from][to] || weight < graphVertex[from][to].weight){\r\n        graphVertex[from][to] = { weight, ref };\r\n      } \r\n\r\n    \r\n});\r\nconst djikstraresult = runDijkstra(graphVertex,state.selectedDeparture,state.selectedArrival);\r\n\r\nlet ref= bestPath(djikstraresult,state.selectedArrival);\r\nlet tripsArray = []\r\nref.forEach(element=>{\r\n    tripsArray.push(state.referencemap.get(element));\r\n})\r\nreturn tripsArray;\r\n}\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ResultComponent from './ResultComponent';\r\nimport {shortestPathalgo} from '../util/helper'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    ...theme.mixins.gutters(),\r\n    paddingTop: theme.spacing.unit * 2,\r\n    paddingBottom: theme.spacing.unit * 2,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 200,\r\n  },\r\n \r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n  typg:{\r\n      marginTop:theme.spacing.unit * 2,\r\n  }\r\n});\r\n\r\n\r\n\r\nlet originalarray = [];\r\nclass DrpContainerSrch extends React.Component {\r\n    constructor() {\r\n       super();\r\n       this.state = {\r\n        selectedDeparture: \"\",\r\n        selectedArrival: \"\",\r\n        tabvalue:0,\r\n        groupmap:new Map(),\r\n        referencemap:new Map(),\r\n        searchResult: [],\r\n       };\r\n      \r\n    }\r\n    \r\n    componentDidMount(){\r\n        \r\n        fetch(`./response.json`, {\r\n            headers : { \r\n              'Content-Type': 'application/json',\r\n              'Accept': 'application/json'\r\n             }\r\n      \r\n          })\r\n          .then((response) => response.json()).then(data => {\r\n            // Work with JSON data here\r\n            originalarray = data.deals;\r\n            const map = new Map();\r\n            const refernceMap = new Map();\r\n        originalarray.forEach((item) => {\r\n        const key = item.departure;\r\n        refernceMap.set(item.reference,item);\r\n        const collection = map.get(key);\r\n        if (!collection) {\r\n            map.set(key, [item]);\r\n        } else {\r\n            collection.push(item);\r\n        }\r\n        \r\n    });\r\n    this.setState({groupmap:map,referencemap:refernceMap})\r\n   \r\n          });\r\n        \r\n          \r\n    }\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n      };\r\n    handleSubmit = (event) => {\r\n       //Make a network call somewhere\r\n       event.preventDefault();\r\n       this.routeCalculation();\r\n    }\r\n    handleReset = (event) => {\r\n        \r\n        event.preventDefault();\r\n        this.setState({\r\n            selectedDeparture: \"\",\r\n        selectedArrival: \"\",\r\n        tabvalue:0,\r\n        groupmap:new Map(),\r\n        referencemap:new Map(),\r\n        searchResult: [],\r\n          })\r\n     }\r\n    handleTabChange = (event, value) => {\r\n        event.preventDefault();\r\n        this.setState({ tabvalue:value },()=>{this.routeCalculation()});\r\n        ;\r\n       \r\n      };\r\n      routeCalculation=()=>{\r\n        let resultArray = [];\r\n        this.setState({searchResult:[]});\r\n        resultArray= this.state.groupmap.get(this.state.selectedDeparture).filter(item=>item.arrival === this.state.selectedArrival);\r\n        if(resultArray.length===0){\r\n            let dummyStateObject = this.state;\r\n         resultArray= shortestPathalgo(originalarray,dummyStateObject);\r\n         this.setState({searchResult:resultArray});\r\n        }else{\r\n            if(this.state.tabvalue===0){\r\n             resultArray.sort((a,b)=>(a.cost-a.discount)-(b.cost-b.discount));\r\n             resultArray.length=1;\r\n             this.setState({searchResult:resultArray});\r\n            }else{\r\n             resultArray.sort((a,b)=>(parseInt(a.duration.h)*60+parseInt(a.duration.m))-(parseInt(b.duration.h)*60+parseInt(a.duration.m)));\r\n             resultArray.length=1;\r\n             this.setState({searchResult:resultArray}); \r\n            }\r\n \r\n        }\r\n      }\r\n    render() {\r\n        \r\n        const { classes } = this.props;\r\n        const cityArray = Array.from( this.state.groupmap.keys() );\r\n       return( \r\n        <Grid container spacing={8}>\r\n        <Grid item xs={12}>\r\n          <form className={classes.root} onSubmit={this.handleSubmit}>\r\n          <Grid item xs={5}>\r\n          <Typography className={classes.typg} variant=\"display1\" component=\"h3\">\r\n          Select your origin destination pair:\r\n        </Typography>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <FormControl  className={classes.formControl}>\r\n          <InputLabel htmlFor=\"origin\">Origin</InputLabel>\r\n          <Select\r\n            value={this.state.selectedDeparture}\r\n            onChange={this.handleChange}\r\n            input={<FilledInput name=\"selectedDeparture\" id=\"origin\" />}\r\n          >\r\n          {cityArray.map((color, index) =>\r\n            <MenuItem key={index} value={color}>{color}</MenuItem>\r\n          )}\r\n          </Select>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item xs ={2}>\r\n        <FormControl  className={classes.formControl}>\r\n          <InputLabel htmlFor=\"destination\">Destination</InputLabel>\r\n          <Select\r\n            value={this.state.selectedArrival}\r\n            onChange={this.handleChange}\r\n            input={<FilledInput name=\"selectedArrival\" id=\"destination\" />}\r\n          >\r\n             {cityArray.map((color, index) =>\r\n            <MenuItem key={index} value={color}>{color}</MenuItem>\r\n          )}\r\n          </Select>\r\n        </FormControl>\r\n        </Grid>\r\n\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.handleSubmit}>Search Route</Button>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={this.handleReset}>Reset </Button>\r\n          </form>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <Paper square>\r\n        <Tabs\r\n          value={this.state.tabvalue}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={this.handleTabChange}\r\n          centered\r\n        >\r\n          <Tab label=\"Cheapest\" />\r\n          <Tab label=\"Fastest\" />\r\n        </Tabs>\r\n      </Paper>\r\n          </Grid>\r\n       {this.state.searchResult.length>0? <ResultComponent result={this.state.searchResult} from={this.state.selectedDeparture} to={this.state.selectedArrival}/>:null}\r\n          </Grid>\r\n       )\r\n    }\r\n  }\r\n\r\nexport default withStyles(styles)(DrpContainerSrch);\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport DrpContainerSrch from './components/DrpContainerSrch';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Header/>\n      <DrpContainerSrch/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n     <App />, \n    document.getElementById('root')\n   );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}